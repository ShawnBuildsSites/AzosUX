<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8"/>
  <meta name="server-include" content="STATE-INJECT-PRAGMA">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Components in Folio Portal</title>
  <link rel="stylesheet" href="index.css" />
  <script type="module" src="app.js"></script>
  <script type="module" src="./components/components.js"></script>
  <style>
    .defs{
      background-color:lemonchiffon;
      list-style-type:none;
      padding:15px;
      border-radius:15px;
      box-shadow: -5px 5px 5px rgba(0,0,0,.175);
    }
    .defs li{margin-bottom:10px;}
    .block{display:block;float:left;padding:15px;width:30%;}
  </style>
</head>

<body class="theme-folio">
  <az-arena>
    <div slot="applet-content">
      <h1>UX Components Sandbox started June 17, 2024</h1>
      <div class="block">
        <p><strong>az-checkbox</strong></p>
        <az-checkbox id="check_one" label="Hello! I have a custom checkmark!"></az-checkbox>
        <az-checkbox id="check_ind" label="This checkbox will have an indeterminate state (coming when I figure the damn thing out)" indeterminate="true"></az-checkbox>
        <az-checkbox id="check_info" label="Color set to text_info. Info will be delivered on July 32." color="text_info"></az-checkbox>
        <az-checkbox id="check_primary" label="Color set to bg_primary." color="bg_primary"></az-checkbox>
        <az-checkbox id="check_warning" label="This is a warning checkbox." color="text_warning"></az-checkbox>
        <az-checkbox id="check_switch" label="This is a switch instead." isSwitch="true"></az-checkbox>
        <az-checkbox id="check_switch_danger" label="Danger! Flip this text_danger switch." isSwitch="true" color="text_danger"></az-checkbox>
        <az-checkbox id="check_switch_success" label="Success switch with a border_success style." isSwitch="true" color="border_success"></az-checkbox>
        <ul class="defs">
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Provides the label&apos;s text next to the checkbox</li>
          <li><strong>indeterminate</strong> <em>(Boolean)</em> &mdash; If true, adds third <em>indeterminate</em> (neither <strong>on</strong> nor <strong>off</strong>). <strong>Default: false.</strong></li>
          <li><strong>isSwitch</strong> <em>(Boolean)</em> &mdash; If true, ignore <em>defaultCheck</em> and replace the checkbox with an on/off switch. <strong>Default: false</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
      <div class="block">
        <p><strong>az-radio-group</strong></p>
        <az-radio-group id="radio_group" label="Choose one of the following:" choices="First choice|Choose this one|A fine choice|The choosiest choice"></az-radio-group>
        <az-radio-group id="radio_group_danger" color="text_danger" label="Choose one of the following:" choices="First choice|Choose this one|A fine choice|The choosiest choice"></az-radio-group>
        <ul class="defs">
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Provides the main prompt for the choices.</li>
          <li><strong>choices</strong> <em>(String)</em> &mdash; Labels for each choice, separated by <strong>|</strong> .</li>
          <li><strong>orientation</strong> <em>(v | h)</em> &mdash; List the choices <strong><u>v</u></strong>ertically (stacked) or <strong><u>h</u></strong>orizontally ("word-wrapped"). <strong>Default: v</strong></li>
          <li><strong>isSwitch</strong> <em>(Boolean)</em> &mdash; If true, replace each radio button with an on/off switch. <strong>Default: false</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
      <div class="block">
        <p><strong>az-radio-group as switches</strong></p>
        <az-radio-group id="radio_switch_group" label="Choose one of the following:" color="text_primary" choices="First choice|Choose this one|A fine choice|The choosiest choice" isSwitch="true"></az-radio-group>
        <az-radio-group id="radio_switch_group_success" label="Choose one of the following:" color="text_success" choices="First choice|Choose this one|A fine choice|The choosiest choice" isSwitch="true"></az-radio-group>
        <ul class="defs">
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Provides the main prompt for the choices.</li>
          <li><strong>choices</strong> <em>(String)</em> &mdash; Labels for each choice, separated by <strong>|</strong> .</li>
          <li><strong>orientation</strong> <em>(v | h)</em> &mdash; List the choices <strong><u>v</u></strong>ertically (stacked) or <strong><u>h</u></strong>orizontally ("word-wrapped"). <strong>Default: v</strong></li>
          <li><strong>isSwitch</strong> <em>(Boolean)</em> &mdash; If true, replace each radio button with an on/off switch. <strong>Default: false</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
      <div class="block">
        <p><strong>az-text-input</strong></p>
        <az-text-input id="single_line_input" label="This is a single-line input" placeholder="Type something here&hellip;"></az-text-input>
        <az-text-input id="password_input" label="This is a password field" placeholder="Type something here&hellip;" inputType="password" color="bg_secondary"></az-text-input>
        <az-text-input id="max_5_input" label="Cannot type more than 5 characters" placeholder="Type something here&hellip;" maxLength="5" color="text_danger"></az-text-input>
        <az-text-input id="disabled_input" label="This field is disabled" value="You cannot select or edit this text" state="disable"></az-text-input>
        <az-text-input id="readonly_input" label="This field is read-only" value="You can select this text but cannot edit it" state="readonly"></az-text-input>
        <az-text-input id="multi_line_text_area" label="This is a multi-line input" placeholder="Type something here&hellip;" inputType="long"></az-text-input>
        <ul class="defs">
          <li><strong>inputType</strong> <em>(short | long | password)</em> &mdash; Determines the type of input field. <strong>Default: single.</strong><br>&bull; If <strong>single</strong>, the field is a standard single-line text input.<br>&bull; If <strong>long</strong>, the field becomes a multi-line text area (useful for paragraphs and longer text inputs).<br>&bull; If <strong>password</strong>, the single-line input is masked by &bull;&bull;&bull;.</li>
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Input field label.</li>
          <li><strong>placeholder</strong> <em>(String)</em> &mdash; Default text displayed in the field. This text has no data value.</li>
          <li><strong>minLength</strong> <em>(Integer)</em> &mdash; Minimum number of characters allowed. This field only applies to input validation. <strong>Default: 0.</strong></li>
          <li><strong>maxLength</strong> <em>(Integer)</em> &mdash; Maximum number of characters allowed. <strong>Default: no limit.</strong></li>
          <li><strong>state</strong> <em>(null | disable | readonly | required)</em> Determines the state of the input field. <strong>Default: null.</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
      <div class="block">
        <p><strong>az-button</strong></p>
        <az-button id="az_button_primary" color="bg_primary" label="Primary Button"></az-button>
        <az-button id="az_button_warning" label="Warning! Warning!" color="bg_warning"></az-button>
        <az-button id="az_button_danger" label="Danger!" color="text_danger"></az-button>
        <az-button id="az_button_success" label="Good job!" color="bg_success"></az-button>
        <az-button id="az_button_info" label="Click to learn" color="bg_info"></az-button>
        <az-button id="az_button_secondary" label="Plain gray button" color="bg_secondary"></az-button>
        <az-button id="az_button_half" label="Button with Half Width" width="half"></az-button>
        <az-button id="az_button_full" label="Button with Full Width" width="full"></az-button>
        <ul class="defs">
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Text that is displayed in the button.</li>
          <li><strong>width</strong> <em>(initial | half | full)</em> &mdash; How wide the button is within its parent element. Initial is the default width. <strong>Default: initial</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with dark border)</strong></li>
          <!--<li><strong>triggers</strong> <em>(String)</em> &mdash; This string matches the ID of the element it triggers to show or hide. Example: When clicked, &lt;az-button <strong>triggers="target_dropdown"</strong>&gt; will show/hide &lt;az-dropdown <strong>id="target_dropdown"</strong>&gt;.</li>-->
        </ul>
      </div>
      <div class="block">
        <p><strong>az-select</strong></p>
        <az-select id="az_select" label="This is a select dropdown with some options" placeholder="Make your choice&hellip;" choices="This is a good option|Another option|Something else|aBcDeFgHiJkLmNoPqRsTuVwXyZ|zYxWvUtSrQpOnMlKjIhGfEdCbA|A somewhat decent option|Yes|No|Maybe|Strawberry Fields Forever|Sgt. Pepper&apos;s Lonely Hearts Club Band"></az-select>
        <az-select id="az_select_noplaceholder" color="text_info" label="Select with default placeholder" choices="This is a good option|Another option|Something else|aBcDeFgHiJkLmNoPqRsTuVwXyZ|zYxWvUtSrQpOnMlKjIhGfEdCbA|A somewhat decent option|Yes|No|Maybe|Strawberry Fields Forever|Sgt. Pepper&apos;s Lonely Hearts Club Band"></az-select>
        <az-select id="az_select_warning" color="bg_warning" label="This is a select dropdown with some options" placeholder="Make your choice&hellip;" choices="This is a good option|Another option|Something else|aBcDeFgHiJkLmNoPqRsTuVwXyZ|zYxWvUtSrQpOnMlKjIhGfEdCbA|A somewhat decent option|Yes|No|Maybe|Strawberry Fields Forever|Sgt. Pepper&apos;s Lonely Hearts Club Band"></az-select>
        <az-select id="az_select_disabled" label="This is a disabled select dropdown" placeholder="Make your choice&hellip;" state="disable" choices="This is a good option|Another option|Something else|aBcDeFgHiJkLmNoPqRsTuVwXyZ|zYxWvUtSrQpOnMlKjIhGfEdCbA|A somewhat decent option|Yes|No|Maybe|Strawberry Fields Forever|Sgt. Pepper&apos;s Lonely Hearts Club Band"></az-select>
        <ul class="defs">
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Provides the main prompt for the select dropdown.</li>
          <li><strong>placeholder</strong> <em>(String)</em> &mdash; Prompt that shows in the first (non-value) option <strong>Default: "Select&hellip;".</strong></li>
          <li><strong>choices</strong> <em>(String)</em> &mdash; List of options separated by | .</li>
          <li><strong>state</strong> <em>(null | disable | required)</em> Determines the state of the input field. <strong>Default: null.</strong></li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
      <div class="block">
        <p><strong>az-slider</strong></p>
        <ul class="defs">
          <li><strong>Attributes for &lt;az-slider&gt;</strong></li>
          <li><strong>id</strong> <em>(String)</em> &mdash; Unique identifier to capture data.</li>
          <li><strong>label</strong> <em>(String)</em> &mdash; Slider description.</li>
          <li><strong>min</strong> <em>(Number)</em> &mdash; Minimum value of the slider's range. <strong>Default: 0.</strong></li>
          <li><strong>max</strong> <em>(Number)</em> &mdash; Maximum value of the slider's range. <strong>Default: 100.</strong></li>
          <li><strong>steps</strong> <em>(Number)</em> &mdash; Number that specifies the granularity that the value must adhere to. <strong>Default: 1.</strong></li>
          <li><strong>orientation</strong> <em>(v | h)</em> &mdash; Determines whether the slider is <strong>v</strong>ertical or <strong>h</strong>orizontal. <strong>Default: v.</strong></li>
          <li><strong>ticks</strong> <em>(Number)</em> &mdash; If defined, adds evenly-spaced unlabeled tick marks to the slider.</li>
          <li><strong>tickLabels</strong> <em>(String)</em> &mdash; If defined, list of labels for tick marks separated by | . This list can be provided <strong>with or instead of</strong> the <em>ticks</em> attribute.</li>
          <li><strong>color</strong> <em>(text_[primary | secondary | success | danger | warning | info | light | dark] | bg_[none | primary | secondary | success | danger | warning | info | light | dark] | border_[none | primary | secondary | success | danger | warning | info | light | dark])</em> &mdash; Set the border, text, or background color (for best readability, these properties cannot be mixed &amp; matched). <strong>Default: text_dark (dark text on no background with no border)</strong></li>
        </ul>
      </div>
    </div>
  </az-arena>
</body>
</html>
